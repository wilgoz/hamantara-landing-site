---
// Define the ultrafiltration products with their images and details
const ultraProducts = [
  {
    image: "/ultrafiltration/Traya-U-90-5.png",
    title: "TRAYA U-90-5",
    length: "900",
    diameter: "80",
    poreSize: "0.02 - 0.1 micron"
  },
  {
    image: "/ultrafiltration/Traya+U-90-2.png",
    title: "TRAYA U-90-2",
    length: "900",
    diameter: "50",
    poreSize: "0.02 - 0.1 micron"
  },
  {
    image: "/ultrafiltration/Traya-1P.U-90-5.png",
    title: "TRAYA 1P U-90-5",
    length: "900",
    diameter: "80",
    poreSize: "0.02 - 0.1 micron"
  },
  {
    image: "/ultrafiltration/Traya-U-150-8-Rev-3.png", 
    title: "TRAYA U-150-8",
    length: "1500",
    diameter: "80",
    poreSize: "0.02 - 0.1 micron"
  },
];
---

<section
    id="hero"
    class="relative bg-gradient-to-br from-primary-dark via-primary to-primary-light pt-32 pb-16 md:pt-48 md:pb-24 overflow-hidden"
>
    <div class="container-custom relative z-10">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            <div class="animate-fadeIn">
                <div class="flex items-center mb-6">
                    <div class="h-px w-12 bg-white/30"></div>
                    <span
                        class="mx-4 text-white/80 font-light text-sm uppercase tracking-widest"
                        >PT. Handal Prima Nusantara</span
                    >
                </div>

                <h1
                    class="text-4xl md:text-5xl lg:text-6xl font-bold text-white leading-tight mb-8"
                >
                    <span class="block font-light mb-2">Discover</span>
                    <span
                        class="bg-clip-text text-transparent bg-gradient-to-r from-white via-white to-white/80"
                        >Premium Water Filtration</span
                    >
                    <span class="relative inline-block">
                        <span class="relative z-10">Solutions</span>
                        <span
                            class="absolute bottom-2 left-0 w-full h-3 bg-secondary/20 -z-0"
                        ></span>
                    </span>
                </h1>

                <p
                    class="text-lg md:text-xl text-white/90 mb-10 max-w-lg font-light leading-relaxed border-l-2 border-accent/60 pl-4"
                >
                    Clean, safe water for your home, business, and emergency
                    needs with cutting-edge ultrafiltration membrane technology.
                </p>

                <div class="flex flex-col sm:flex-row gap-5">
                    <a
                        href="#products"
                        class="btn bg-white text-primary hover:bg-neutral-50 transition-all shadow-lg shadow-primary-dark/20 flex items-center"
                    >
                        <span>Explore Products</span>
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            class="h-5 w-5 ml-2"
                            viewBox="0 0 20 20"
                            fill="currentColor"
                        >
                            <path
                                fill-rule="evenodd"
                                d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z"
                                clip-rule="evenodd"></path>
                        </svg>
                    </a>
                    <a
                        href="#contact"
                        class="btn bg-transparent border border-white/30 backdrop-blur-sm text-white hover:bg-white/10 transition-all group"
                    >
                        <span>Contact Us</span>
                        <span
                            class="ml-2 group-hover:translate-x-1 transition-transform duration-300"
                            >→</span
                        >
                    </a>
                </div>
            </div>

            <div class="hidden lg:block relative">
                <!-- Product Carousel Container -->
                <div class="relative w-full h-[540px] p-[1px] rounded-2xl backdrop-blur-sm overflow-hidden">
                    <!-- Animated border gradient -->
                    <div class="absolute inset-0 bg-gradient-to-br from-white/30 via-primary-light/50 to-secondary/30 rounded-2xl"></div>

                    <!-- Carousel Container -->
                    <div class="absolute inset-[1px] bg-white/10 rounded-2xl backdrop-blur-md border border-white/20 overflow-hidden">
                        <!-- Carousel Images -->
                        <div id="carousel-container" class="relative w-full h-full">
                            {ultraProducts.map((product, index) => (
                                <div 
                                    class={`carousel-slide absolute inset-0 transition-opacity duration-500 ${index === 0 ? 'opacity-100' : 'opacity-0'}`}
                                    data-slide={index}
                                >
                                    <img
                                        src={product.image}
                                        alt={product.title}
                                        class="w-full h-4/5 object-contain object-center p-8 pt-12"
                                        loading={index === 0 ? "eager" : "lazy"}
                                    />
                                    
                                    <!-- Overlay for text legibility -->
                                    <div class="absolute bottom-0 left-0 right-0 h-1/2 bg-gradient-to-t from-primary-dark/70 to-transparent"></div>
                                    
                                    <!-- Product information overlay -->
                                    <div class="absolute bottom-0 left-0 right-0 p-4 backdrop-blur-sm bg-gradient-to-t from-primary-dark/80 to-transparent">
                                        <h3 class="text-white text-lg font-medium mb-2 tracking-wide">
                                            {product.title}
                                        </h3>
                                        <div class="h-[1px] w-12 bg-white/30 mb-3"></div>

                                        <div class="flex items-center justify-between gap-4">
                                            <!-- Dimensions (Length & Diameter together) -->
                                            <div class="flex items-center">
                                                <div class="w-8 h-8 rounded-full bg-white/10 flex items-center justify-center mr-2">
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-white/80" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 6h16M4 10h16M4 14h16M4 18h16" />
                                                    </svg>
                                                </div>
                                                <div>
                                                    <span class="text-xs text-white/70 uppercase">Dimensions</span>
                                                    <p class="text-white font-medium text-sm">{product.length} × {product.diameter} mm</p>
                                                </div>
                                            </div>

                                            <!-- Pore Size -->
                                            <div class="flex items-center">
                                                <div class="w-8 h-8 rounded-full bg-white/10 flex items-center justify-center mr-2">
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-white/80" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                                                    </svg>
                                                </div>
                                                <div>
                                                    <span class="text-xs text-white/70 uppercase">Pore Size</span>
                                                    <p class="text-white font-medium text-sm">{product.poreSize}</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            ))}
                        </div>

                        <!-- Carousel Controls -->
                        <button 
                            id="prev-btn"
                            class="absolute left-4 top-1/2 -translate-y-1/2 w-12 h-12 rounded-full bg-black/40 backdrop-blur-sm border border-black/30 flex items-center justify-center text-white hover:bg-black/60 transition-all duration-300 z-10"
                        >
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                            </svg>
                        </button>

                        <button 
                            id="next-btn"
                            class="absolute right-4 top-1/2 -translate-y-1/2 w-12 h-12 rounded-full bg-black/40 backdrop-blur-sm border border-black/30 flex items-center justify-center text-white hover:bg-black/60 transition-all duration-300 z-10"
                        >
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                            </svg>
                        </button>

                        <!-- Carousel Indicators -->
                        <div class="absolute bottom-20 left-1/2 -translate-x-1/2 flex space-x-2 z-10">
                            {ultraProducts.map((_, index) => (
                                <button 
                                    class={`carousel-indicator w-3 h-3 rounded-full border border-white/30 transition-all duration-300 ${index === 0 ? 'bg-white' : 'bg-white/20'}`}
                                    data-slide={index}
                                ></button>
                            ))}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="absolute top-0 right-0 w-full h-full overflow-hidden z-0">
        <div
            class="absolute top-0 right-0 w-1/2 h-1/2 bg-white/5 rounded-bl-full transform rotate-45 translate-x-1/2 -translate-y-1/4"
        >
        </div>
        <div
            class="absolute bottom-0 left-0 w-full h-24 bg-gradient-to-t from-white/5 to-transparent"
        >
        </div>
        <div class="absolute bottom-0 left-0 w-full">
            <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 1440 320"
                class="w-full h-auto text-white/5 translate-y-1/2"
            >
                <path
                    fill="currentColor"
                    fill-opacity="1"
                    d="M0,128L48,149.3C96,171,192,213,288,208C384,203,480,149,576,154.7C672,160,768,224,864,218.7C960,213,1056,139,1152,122.7C1248,107,1344,149,1392,170.7L1440,192L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"
                ></path>
            </svg>
        </div>
    </div>
</section>

<script>
  // Carousel functionality
  let currentSlide = 0;
  const totalSlides = document.querySelectorAll('.carousel-slide').length;
  
  function showSlide(slideIndex: number) {
    // Hide all slides
    document.querySelectorAll('.carousel-slide').forEach((slide, index) => {
      if (index === slideIndex) {
        slide.classList.remove('opacity-0');
        slide.classList.add('opacity-100');
      } else {
        slide.classList.remove('opacity-100');
        slide.classList.add('opacity-0');
      }
    });
    
    // Update indicators
    document.querySelectorAll('.carousel-indicator').forEach((indicator, index) => {
      if (index === slideIndex) {
        indicator.classList.add('bg-white');
        indicator.classList.remove('bg-white/20');
      } else {
        indicator.classList.remove('bg-white');
        indicator.classList.add('bg-white/20');
      }
    });
    
    currentSlide = slideIndex;
  }
  
  function nextSlide() {
    const next = (currentSlide + 1) % totalSlides;
    showSlide(next);
  }
  
  function prevSlide() {
    const prev = (currentSlide - 1 + totalSlides) % totalSlides;
    showSlide(prev);
  }
  
  // Event listeners
  document.addEventListener('DOMContentLoaded', () => {
    const nextBtn = document.getElementById('next-btn');
    const prevBtn = document.getElementById('prev-btn');
    const indicators = document.querySelectorAll('.carousel-indicator');
    const carousel = document.getElementById('carousel-container');
    
    let autoPlayInterval: number | null = null;
    
    // Auto-play functions
    const startAutoPlay = () => {
      // Clear any existing interval first
      if (autoPlayInterval) {
        clearInterval(autoPlayInterval);
      }
      autoPlayInterval = setInterval(nextSlide, 5000);
    };
    
    const stopAutoPlay = () => {
      if (autoPlayInterval) {
        clearInterval(autoPlayInterval);
        autoPlayInterval = null;
      }
    };
    
    if (nextBtn) {
      nextBtn.addEventListener('click', () => {
        stopAutoPlay();
        nextSlide();
        startAutoPlay(); // Restart auto-play after manual interaction
      });
    }
    
    if (prevBtn) {
      prevBtn.addEventListener('click', () => {
        stopAutoPlay();
        prevSlide();
        startAutoPlay(); // Restart auto-play after manual interaction
      });
    }
    
    // Indicator click handlers
    indicators.forEach((indicator, index) => {
      indicator.addEventListener('click', () => {
        stopAutoPlay();
        showSlide(index);
        startAutoPlay(); // Restart auto-play after manual interaction
      });
    });
    
    // Pause auto-play on hover
    if (carousel) {
      carousel.addEventListener('mouseenter', stopAutoPlay);
      carousel.addEventListener('mouseleave', startAutoPlay);
    }
    
    // Start auto-play initially
    startAutoPlay();
  });
</script>
